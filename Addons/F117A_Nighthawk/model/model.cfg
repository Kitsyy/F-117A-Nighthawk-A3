#define ADD_COMPONENT(component) \
	class Add##component \
	{ \
		selection = z_##component; \
		source = Add##component; \
		type = hide; \
		sourceAddress = mirror; \
		minValue = -1; \
		maxValue = 0; \
		hideValue = 0.5; \
	};

class CfgModels
{
	class Default
	{
		sectionsInherit="";
		sections[] = {};
		skeletonName = "";
	};
	class Vehicle: Default
	{
		sections[] =
		{
			"cislo",
			"grupa",
			"side",
			"sektor",
			"clan",
			"clan_sign",
			"podsvit pristroju",
			"poskozeni",
			"L svetlo",
			"P svetlo",
			"zasleh"
		};
	};
	class Plane: Vehicle
	{
		htMin = 60;		// Minimum half-cooling time (in seconds)
		htMax = 1800;	// Maximum half-cooling time (in seconds)
		afMax = 200;	// Maximum temperature in case the model is alive (in celsius)
		mfMax = 100;	// Maximum temperature when the model is moving (in celsius)
		mFact = 0;		// Metabolism factor - number from interval <0, 1> (0 - metabolism has no influence, 1 - metabolism has full influence (no other temperature source will be considered)).
		tBody = 0;	 	// Metabolism temperature of the model (in celsius)


		sectionsInherit="Vehicle";
		sections[]=
		{
			"vrtule staticka",
			"vrtule blur",
			"trup",
			"zbytek"
		};
		skeletonName="Plane";
		class Animations
		{
			class damageHide
			{
					type="hide";
					source="damage";
					selection="damageHide";
			};
			class IndicatorAltBaro: Rotation
			{
				source="altBaro";
				sourceAddress="loop";
				selection="alt";
				axis="osa_alt";
				memory=0;
				maxValue=304;
				angle1="rad -360";
			};
			class IndicatorAltBaro2: IndicatorAltBaro
			{
				selection="alt2";
				axis="osa_alt2";
			};
			class IndicatorAltRadar: Rotation
			{
				source="altRadar";
				selection="nm_alt";
				axis="osa_nm_alt";
				memory="false";
				maxValue=61;
				angle1="rad -180";
			};
			class IndicatorAltRadar2: IndicatorAltRadar
			{
				selection="nm_alt2";
				axis="osa_nm_alt2";
			};
			class IndicatorSpeed: Rotation
			{
				source="speed";
				selection="mph";
				axis="osa_mph";
				memory="false";
				maxValue=125;
				angle1="rad -320";
			};
			class IndicatorSpeed2: IndicatorSpeed
			{
				selection="mph2";
				axis="osa_mph2";
			};
			class IndicatorVertSpeed: Rotation
			{
				source="vertSpeed";
				selection="vert_speed";
				axis="osa_vert_speed";
				minValue=-30;
				maxValue=30;
				angle1="rad -300";
			};
			class IndicatorVertSpeed2: IndicatorVertSpeed
			{
				selection="vert_speed2";
				axis="osa_vert_speed2";
			};
			class IndicatorRPM: Rotation
			{
				source="rpm";
				selection="rpm";
				axis="osa_rpm";
				memory="false";
				maxValue=12;
				angle1="rad -320";
			};
			class IndicatorRPM2: IndicatorRPM
			{
				selection="rpm2";
				axis="osa_rpm2";
			};
			class IndicatorCompass: Rotation
			{
				source="direction";
				selection="kompas";
				axis="osa_kompas";
				memory="false";
				minValue=-3.141593;
				maxValue=3.141593;
				angle1="rad -360";
			};
			class IndicatorCompass2: IndicatorCompass
			{
				selection="kompas2";
				axis="osa_kompas2";
			};
			class WatchHour: Rotation
			{
				source="clockHour";
				selection="hodinova";
				axis="osa_time";
				memory="false";
				angle1="rad -360";
			};
			class WatchHour2: WatchHour
			{
				selection="hodinova2";
				axis="osa_time2";
			};
			class WatchMinute: Rotation
			{
				source="clockMinute";
				selection="minutova";
				axis="osa_time";
				memory="false";
				angle1="rad -360";
			};
			class WatchMinute2: WatchMinute
			{
				selection="minutova2";
				axis="osa_time2";
			};
			class FWheel
			{
				type="rotation";
				source="gear";
				selection="predni kolo";
				axis="osa predniho kola";
				minValue=-1;
				maxValue=1;
				angle0="rad -104.4";
				angle1="rad 104.4";
			};
			class LWheel: FWheel
			{
				selection="levy kolo";
				axis="osa leveho kola";
				angle0="rad -81";
				angle1="rad 81";
			};
			class RWheel: LWheel
			{
				selection="pravy kolo";
				axis="osa praveho kola";
			};
			class FWheelRot
			{
				type="rotationX";
				source="wheel";
				selection="predni kolo rot";
				axis="predni kolo rot";
				memory="false";
				minValue=0;
				maxValue=2;
				sourceAddress="loop";
				angle0=0;
				angle1="-rad 360";
			};
			class LWheelRot: FWheelRot
			{
				selection="levy kolo rot";
				axis="levy kolo rot";
				minValue=0;
				maxValue=2.300000;
			};
			class RWheelRot: LWheelRot
			{
				selection="pravy kolo rot";
				axis="pravy kolo rot";
			};
			class LFlap
			{
				type="rotation";
				source="flap";
				selection="ls klapka";
				axis="osa ls klapky";
				angle0=0;
				angle1="rad -28.6";
			};
			class RFlap
			{
				type="rotation";
				source="flap";
				selection="ps klapka";
				axis="osa ps klapky";
				angle0=0;
				angle1="rad 28.6";
			};
			class LElevator
			{
				type="rotation";
				source="elevator";
				selection="leva vejskovka";
				axis="osa leve vejskovky";
				minValue=-1;
				maxValue=1;
				angle0="rad 28.6";
				angle1="rad -28.6";
			};
			class RElevator: LElevator
			{
				selection="prava vejskovka";
				axis="osa prave vejskovky";
			};
			class LAileronT
			{
				type="rotation";
				source="aileronT";
				selection="lkh klapka";
				axis="osa lkh klapky";
				minValue=-0.500000;
				maxValue=1.400000;
				angle0=-0.500000;
				angle1=1.400000;
			};
			class RAileronT
			{
				type="rotation";
				source="aileronB";
				selection="pkh klapka";
				axis="osa pkh klapky";
				minValue=-1.400000;
				maxValue=0.500000;
				angle0=-1.400000;
				angle1=0.500000;
			};
			class LAileronB
			{
				type="rotation";
				source="aileronB";
				selection="lkd klapka";
				axis="osa lkd klapky";
				minValue=-1.400000;
				maxValue=0.500000;
				angle0=-1.400000;
				angle1=0.500000;
			};
			class RAileronB
			{
				type="rotation";
				source="aileronT";
				selection="pkd klapka";
				axis="osa pkd klapky";
				minValue=-0.500000;
				maxValue=1.400000;
				angle0=-0.500000;
				angle1=1.400000;
			};
			/*class LRudder
			{
				type="rotation";
				source="rudder";
				selection="leva smerovka";
				axis="osa leve smerovky";
				minValue=-1;
				maxValue=1;
				angle0="rad 22.9";
				angle1="rad -22.9";
			};
			class RRudder: LRudder
			{
				selection="prava smerovka";
				axis="osa prave smerovky";
			};*/
			class Rotor0
			{
				type="rotation";
				source="rotor";
				selection="vrtule";
				axis="osa vrtule";
				angle0=0;
				angle1="rad 360";
			};
			class Rotor1: Rotor0
			{
				selection="vrtule 1";
				axis="osa vrtule 1";
			};
		};
	};
	class Plane_Base_F: Plane
	{
		skeletonName = Plane_Base_F;

		class Animations: Animations
		{
			class Stick_Pilot_Bank
			{
				type="rotation";
				axis="stick_pilot_bank_axis";
				source="aileron";
				selection="stick_pilot";
				minValue="rad -360";
				maxValue="rad 360";
				angle0="rad -44";
				angle1="rad 44";
			};
			class Stick_Pilot_Dive
			{
				type="rotation";
				axis="stick_pilot_dive_axis";
				source="elevator";
				selection="stick_pilot";
				minValue="rad -360";
				maxValue="rad 360";
				angle0="rad -44";
				angle1="rad 44";
			};
		};
	};
	class F117A : Plane_Base_F
	{
		sectionsInherit = "";
		sections[] = {
			"Antenna low range Below left",
			"Antenna low range below right 1", 
			"Antenna low range below right 2",
			"Antenna low range top",
			"Antenna main below", 
			"Antenna main top",
			"Back upper hydraulics", 
			"Back wheel small Hydraulics",
			"Body",
			"Bomb bay door left",
			"Bomb bay door right", 
			"Bomb bay hook left",
			"Bomb bay hook right", 
			"Bomb bay hydraulics chrome left",
			"Bomb bay hydraulics chrome right", "Bomb bay hydraulics left",
			"Bomb bay hydraulics right", "Bomb bay sliders",
			"Cockpit", "DLIR",
			"FLIR", "DLIR Cover",
			"Flap left left", "Flap left right", 
			"Flap right right", "Flap right left",
			"FLIR Cover", "FLIR Rotation",
			"Front_panel_top_hydraulic",
			"Holes lower verts", "Holes top edges",
			"proxy:\a3\data_f\proxies\Plane_Fighter_01\Pilot.001",
			"proxy:\a3\weapons_f\DynamicLoadout\PylonMissile_1x_Bomb_02_F.001",
			"proxy:\a3\weapons_f\DynamicLoadout\PylonMissile_1x_Bomb_02_F.002",
			"Tail flaps", "Tail under flaps",
			"Wheel back cover left", "Wheel back cover right", 
			"Wheel back covers", "Wheel Back main hydraulic",
			"Wheel Front", "Wheel Front 2nd Hydraulic", 
			"Wheel Front 3rd Hydraulic", "Wheel front cover hydraulic",
			"Wheel Front Hatch", "Wheel front shield hydraulic",
			"Wheel Front Top Slider Hydraulic", "Wheels back 2nd hydraulic",
			"Wheels back headlight hydraulic", "Wheel_backL",
			"Wheel_backR" 
		};
		skeletonName = "F117A_Skeleton";
		class Animations : Animations
		{
			ADD_COMPONENT(gbu12)

			class FWheel
			{
				type = "hide";
				source = "gear";
				selection = "Wheel Front"; 
				memory = true;
				minValue=0;
				maxValue=1;
				hideValue=0;
			};
			class RWheel : FWheel
			{
				selection = "Wheel_back1";
			};
			class LWheel : RWheel
			{
				selection = "Wheel_back2";
			};
			class FWheelRot
			{
				type = "rotationX";
				source = "wheel";
				selection = "Wheel Front";
				axis = "Front_wheel_axis";
				memory = true;
				minValue = 0;
				maxValue = 2;
				sourceAddress = "loop";
				angle0 = 0;
				angle1 = "-rad 360";
			};
			class RWheelRot : FWheelRot
			{
				selection = "Wheel_back1";
				axis = "Back_right_wheel_axis";
				minValue = 0;
				maxValue = 2.300000;
			};
			class LWheelRot : RWheelRot
			{
				selection = "Wheel_back2";
				axis = "Back_left_wheel_axis";
			};
			class PositionLights
			{
				selection = "Light_tail_LDW_R";
				source = collisionLights;
				type = hide;
				memory = false;
				minValue = 0.0;
				maxValue = 1.0;
				hideValue = 0.0;
				unHideValue = 0.5;
			};
			class TailLightsLUP : PositionLights
			{
				selection = "Light_tail_LUP_G";
			};
			class TailLightsRDW : PositionLights
			{
				selection = "Light_tail_RDW_R";
			};
			class TailLightsRUP : PositionLights
			{
				selection = "Light_tail_RUP_G";
			};
			class LeftWingLight 
			{
				selection = "Light_wing_L_W";
				source = collisionLights;
				type = hide;
				memory = true;
				minValue = 0.0;
				maxValue = 1.0;
				hideValue = 0.0;
				unHideValue = 0.5;
			};
			class RightWingLight : LeftWingLight
			{
				selection = "Light_wing_R_W";
			};
		};
	};	
};

class CfgSkeletons
{
	class Default
	{
		isDiscrete = 1;
		skeletonInherit = "";
		skeletonBones[] = {};
	};
	class Vehicle : Default {};	
	class Plane: Vehicle
	{
		skeletonInherit="Vehicle";
		skeletonBones[]=
		{
			"alt","",
			"alt2","",
			"mph","",
			"mph2","",
			"vert_speed","",
			"vert_speed2","",
			"nm_alt","",
			"hud_alt","",
			"hud_speed","",
			"rpm","",
			"kompas","",
			"kompas2","",
			"hodinova","",
			"hodinova2","",
			"minutova","",
			"minutova2","",
			"lkh klapka","",
			"pkh klapka","",
			"lkd klapka","",
			"pkd klapka","",
			"leva smerovka","",
			"leva vejskovka","",
			"prava smerovka","",
			"prava vejskovka","",
			"ls klapka","",
			"ps klapka","",
			"predni kolo","",
			"levy kolo","",
			"pravy kolo","",
			"vrtule 1","",
			"vrtule","",
			"damageHide",""
		};
	};

	class Plane_Base_F: Plane
	{
		skeletonInherit = "Plane";
		skeletonBones[] =
		{
			"stick_pilot",""
		};
	};

	class F117A_Skeleton : Plane_Base_F
	{
		skeletonInherit = "Plane_Base_F";
		skeletonBones[] = 
		{
			"Back_left_wheel_axis", "", 
			"Back_left_wheel_center", "Back_left_wheel_axis",
			"Back_left_wheel_rim", "Back_left_wheel_center",
			"Back_right_wheel_axis", "",
			"Back_right_wheel_center", "Back_right_wheel_axis",
			"Back_right_wheel_rim", "Back_right_wheel_center",
			"DLIR_pos", "",
			"DLIR_dir", "DLIR_pos",
			"FLIR_pos", "",
			"FLIR_dir", "FLIR_pos",
			"S_Front_light", "",
			"E_Front_light", "",
			"S_L_light", "",
			"E_L_light", "",
			"S_R_light", "",
			"E_R_light", "",
			"Front_hydraulic_axis", "",
			"Front_hydraulic_axis2", "",
			"Front_hydraulic_axis3", "",
			"Front_wheel_axis", "",
			"Front_wheel_center", "Front_wheel_axis",
			"Front_wheel_rim", "Front_wheel_center", 
			"Light_tail_LDW_R", "",
			"Light_tail LUP_G", "",
			"Light_tail_RDW_R", "",
			"Light_tail RUP_G", "",
			"Light_wing_L_W", "",
			"Light_wing_R_W", ""
		};
	};
};
